// automatically generated by Xtext
grammar org.xtext.example.platoon.Platoon with org.eclipse.xtext.common.Terminals

import "platoon" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
		'platoon:' platoon=Platoon
		'route' route=Route
		'constraints' constraints=Constraints;

routeCommand returns routeCommand:
	Forward | TurnLeft | TurnRight;

Vehicle returns Vehicle:
	FollowingVehicle | LeaderVehicle;

Platoon returns Platoon:
		'LV' leaderVehicle=LeaderVehicle
		('FV' followingVehicle+=FollowingVehicle (followingVehicle+=FollowingVehicle)* )?;

Route returns Route:
	'Route'
	name=EString
	'{'
		'routeCommands' '{' routeCommands+=routeCommand ( "," routeCommands+=routeCommand)* '}' 
	'}';

Constraints returns Constraints:
	'Constraints'
	'{'
		'lbound' lbound=EInt
		'ubound' ubound=EInt
	'}';

LeaderVehicle returns LeaderVehicle:
	'LeaderVehicle'
	name=EString
	'{'
		'route' route=[Route|EString]
	'}';

FollowingVehicle returns FollowingVehicle:
	'FollowingVehicle'
	name=EString
	'{'
		'following' following=[Vehicle|EString]
	'}';

EString returns ecore::EString:
	STRING | ID;

Forward returns Forward:
	'Forward'
	'{'
		'distance' distance=EInt
	'}';

TurnLeft returns TurnLeft:
	{TurnLeft}
	'TurnLeft'
	;

TurnRight returns TurnRight:
	{TurnRight}
	'TurnRight'
	;

EInt returns ecore::EInt:
	'-'? INT;

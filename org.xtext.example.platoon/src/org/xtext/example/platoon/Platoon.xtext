// automatically generated by Xtext
grammar org.xtext.example.platoon.Platoon with org.eclipse.xtext.common.Terminals

import "platoon" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	'Root'
	'{'
		'platoon' platoon=[Platoon|EString]
		'route' route=[Route|EString]
		'constraints' constraints=[Constraints|EString]
	'}';

routeCommand returns routeCommand:
	TurnLeft | TurnRight | Forward;

Vehicle returns Vehicle:
	FollowingVehicle | LeaderVehicle;

Platoon returns Platoon:
	'Platoon'
	'{'
		'leaderVehicle' leaderVehicle=[LeaderVehicle|EString]
		('followingVehicle' '(' followingVehicle+=[FollowingVehicle|EString] ( "," followingVehicle+=[FollowingVehicle|EString])* ')' )?
	'}';

Route returns Route:
	'Route'
	'{'
		'routeCommands' '{' routeCommands+=routeCommand ( "," routeCommands+=routeCommand)* '}' 
	'}';

Constraints returns Constraints:
	{Constraints}
	'Constraints'
	'{'
		('lbound' lbound=EInt)?
		('ubound' ubound=EInt)?
	'}';

LeaderVehicle returns LeaderVehicle:
	'LeaderVehicle'
	'{'
		'route' route=[Route|EString]
	'}';

FollowingVehicle returns FollowingVehicle:
	'FollowingVehicle'
	'{'
		'following' following=[Vehicle|EString]
	'}';

TurnLeft returns TurnLeft:
	{TurnLeft}
	'TurnLeft'
	;

TurnRight returns TurnRight:
	{TurnRight}
	'TurnRight'
	;

Forward returns Forward:
	'Forward'
	'{'
		'distance' '{' distance+=EInt ( "," distance+=EInt)* '}' 
	'}';

EInt returns ecore::EInt:
	'-'? INT;

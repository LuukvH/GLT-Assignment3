/*
 * generated by Xtext 2.10.0
 */
grammar InternalPlatoon;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.platoon.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.platoon.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.platoon.services.PlatoonGrammarAccess;

}
@parser::members {
	private PlatoonGrammarAccess grammarAccess;

	public void setGrammarAccess(PlatoonGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRoot
entryRuleRoot
:
{ before(grammarAccess.getRootRule()); }
	 ruleRoot
{ after(grammarAccess.getRootRule()); } 
	 EOF 
;

// Rule Root
ruleRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootAccess().getGroup()); }
		(rule__Root__Group__0)
		{ after(grammarAccess.getRootAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerouteCommand
entryRulerouteCommand
:
{ before(grammarAccess.getRouteCommandRule()); }
	 rulerouteCommand
{ after(grammarAccess.getRouteCommandRule()); } 
	 EOF 
;

// Rule routeCommand
rulerouteCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRouteCommandAccess().getAlternatives()); }
		(rule__RouteCommand__Alternatives)
		{ after(grammarAccess.getRouteCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlatoon
entryRulePlatoon
:
{ before(grammarAccess.getPlatoonRule()); }
	 rulePlatoon
{ after(grammarAccess.getPlatoonRule()); } 
	 EOF 
;

// Rule Platoon
rulePlatoon 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlatoonAccess().getGroup()); }
		(rule__Platoon__Group__0)
		{ after(grammarAccess.getPlatoonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRoute
entryRuleRoute
:
{ before(grammarAccess.getRouteRule()); }
	 ruleRoute
{ after(grammarAccess.getRouteRule()); } 
	 EOF 
;

// Rule Route
ruleRoute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRouteAccess().getGroup()); }
		(rule__Route__Group__0)
		{ after(grammarAccess.getRouteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraints
entryRuleConstraints
:
{ before(grammarAccess.getConstraintsRule()); }
	 ruleConstraints
{ after(grammarAccess.getConstraintsRule()); } 
	 EOF 
;

// Rule Constraints
ruleConstraints 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintsAccess().getGroup()); }
		(rule__Constraints__Group__0)
		{ after(grammarAccess.getConstraintsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeaderVehicle
entryRuleLeaderVehicle
:
{ before(grammarAccess.getLeaderVehicleRule()); }
	 ruleLeaderVehicle
{ after(grammarAccess.getLeaderVehicleRule()); } 
	 EOF 
;

// Rule LeaderVehicle
ruleLeaderVehicle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeaderVehicleAccess().getGroup()); }
		(rule__LeaderVehicle__Group__0)
		{ after(grammarAccess.getLeaderVehicleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFollowingVehicle
entryRuleFollowingVehicle
:
{ before(grammarAccess.getFollowingVehicleRule()); }
	 ruleFollowingVehicle
{ after(grammarAccess.getFollowingVehicleRule()); } 
	 EOF 
;

// Rule FollowingVehicle
ruleFollowingVehicle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFollowingVehicleAccess().getGroup()); }
		(rule__FollowingVehicle__Group__0)
		{ after(grammarAccess.getFollowingVehicleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForward
entryRuleForward
:
{ before(grammarAccess.getForwardRule()); }
	 ruleForward
{ after(grammarAccess.getForwardRule()); } 
	 EOF 
;

// Rule Forward
ruleForward 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForwardAccess().getGroup()); }
		(rule__Forward__Group__0)
		{ after(grammarAccess.getForwardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurnLeft
entryRuleTurnLeft
:
{ before(grammarAccess.getTurnLeftRule()); }
	 ruleTurnLeft
{ after(grammarAccess.getTurnLeftRule()); } 
	 EOF 
;

// Rule TurnLeft
ruleTurnLeft 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnLeftAccess().getGroup()); }
		(rule__TurnLeft__Group__0)
		{ after(grammarAccess.getTurnLeftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurnRight
entryRuleTurnRight
:
{ before(grammarAccess.getTurnRightRule()); }
	 ruleTurnRight
{ after(grammarAccess.getTurnRightRule()); } 
	 EOF 
;

// Rule TurnRight
ruleTurnRight 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurnRightAccess().getGroup()); }
		(rule__TurnRight__Group__0)
		{ after(grammarAccess.getTurnRightAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
		RULE_INT
		{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RouteCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRouteCommandAccess().getForwardParserRuleCall_0()); }
		ruleForward
		{ after(grammarAccess.getRouteCommandAccess().getForwardParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRouteCommandAccess().getTurnLeftParserRuleCall_1()); }
		ruleTurnLeft
		{ after(grammarAccess.getRouteCommandAccess().getTurnLeftParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRouteCommandAccess().getTurnRightParserRuleCall_2()); }
		ruleTurnRight
		{ after(grammarAccess.getRouteCommandAccess().getTurnRightParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__0__Impl
	rule__Root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getPlatoonAssignment_0()); }
	(rule__Root__PlatoonAssignment_0)
	{ after(grammarAccess.getRootAccess().getPlatoonAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__1__Impl
	rule__Root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getRouteAssignment_1()); }
	(rule__Root__RouteAssignment_1)
	{ after(grammarAccess.getRootAccess().getRouteAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Root__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootAccess().getConstraintsAssignment_2()); }
	(rule__Root__ConstraintsAssignment_2)
	{ after(grammarAccess.getRootAccess().getConstraintsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Platoon__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Platoon__Group__0__Impl
	rule__Platoon__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlatoonAccess().getPlatoonKeyword_0()); }
	'platoon:'
	{ after(grammarAccess.getPlatoonAccess().getPlatoonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Platoon__Group__1__Impl
	rule__Platoon__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlatoonAccess().getLeaderVehicleAssignment_1()); }
	(rule__Platoon__LeaderVehicleAssignment_1)
	{ after(grammarAccess.getPlatoonAccess().getLeaderVehicleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Platoon__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlatoonAccess().getGroup_2()); }
	(rule__Platoon__Group_2__0)?
	{ after(grammarAccess.getPlatoonAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Platoon__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Platoon__Group_2__0__Impl
	rule__Platoon__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlatoonAccess().getFollowingVehicleAssignment_2_0()); }
	(rule__Platoon__FollowingVehicleAssignment_2_0)
	{ after(grammarAccess.getPlatoonAccess().getFollowingVehicleAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Platoon__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlatoonAccess().getFollowingVehicleAssignment_2_1()); }
	(rule__Platoon__FollowingVehicleAssignment_2_1)*
	{ after(grammarAccess.getPlatoonAccess().getFollowingVehicleAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Route__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Route__Group__0__Impl
	rule__Route__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRouteAccess().getRouteKeyword_0()); }
	'route'
	{ after(grammarAccess.getRouteAccess().getRouteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Route__Group__1__Impl
	rule__Route__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRouteAccess().getNameAssignment_1()); }
	(rule__Route__NameAssignment_1)
	{ after(grammarAccess.getRouteAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Route__Group__2__Impl
	rule__Route__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRouteAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRouteAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Route__Group__3__Impl
	rule__Route__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRouteAccess().getRouteCommandsAssignment_3()); }
	(rule__Route__RouteCommandsAssignment_3)
	{ after(grammarAccess.getRouteAccess().getRouteCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Route__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRouteAccess().getRouteCommandsAssignment_4()); }
	(rule__Route__RouteCommandsAssignment_4)*
	{ after(grammarAccess.getRouteAccess().getRouteCommandsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__0__Impl
	rule__Constraints__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getConstraintsKeyword_0()); }
	'constraints:'
	{ after(grammarAccess.getConstraintsAccess().getConstraintsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__1__Impl
	rule__Constraints__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getLboundAssignment_1()); }
	(rule__Constraints__LboundAssignment_1)
	{ after(grammarAccess.getConstraintsAccess().getLboundAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__2__Impl
	rule__Constraints__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getLessThanSignEqualsSignKeyword_2()); }
	'<='
	{ after(grammarAccess.getConstraintsAccess().getLessThanSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__3__Impl
	rule__Constraints__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getHeadwayKeyword_3()); }
	'headway'
	{ after(grammarAccess.getConstraintsAccess().getHeadwayKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__4__Impl
	rule__Constraints__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getLessThanSignEqualsSignKeyword_4()); }
	'<='
	{ after(grammarAccess.getConstraintsAccess().getLessThanSignEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraints__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintsAccess().getUboundAssignment_5()); }
	(rule__Constraints__UboundAssignment_5)
	{ after(grammarAccess.getConstraintsAccess().getUboundAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeaderVehicle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeaderVehicle__Group__0__Impl
	rule__LeaderVehicle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeaderVehicleAccess().getLVKeyword_0()); }
	'LV'
	{ after(grammarAccess.getLeaderVehicleAccess().getLVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeaderVehicle__Group__1__Impl
	rule__LeaderVehicle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeaderVehicleAccess().getNameAssignment_1()); }
	(rule__LeaderVehicle__NameAssignment_1)
	{ after(grammarAccess.getLeaderVehicleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeaderVehicle__Group__2__Impl
	rule__LeaderVehicle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeaderVehicleAccess().getRouteKeyword_2()); }
	'route'
	{ after(grammarAccess.getLeaderVehicleAccess().getRouteKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeaderVehicle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeaderVehicleAccess().getRouteAssignment_3()); }
	(rule__LeaderVehicle__RouteAssignment_3)
	{ after(grammarAccess.getLeaderVehicleAccess().getRouteAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FollowingVehicle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowingVehicle__Group__0__Impl
	rule__FollowingVehicle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowingVehicleAccess().getFVKeyword_0()); }
	'FV'
	{ after(grammarAccess.getFollowingVehicleAccess().getFVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowingVehicle__Group__1__Impl
	rule__FollowingVehicle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowingVehicleAccess().getNameAssignment_1()); }
	(rule__FollowingVehicle__NameAssignment_1)
	{ after(grammarAccess.getFollowingVehicleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowingVehicle__Group__2__Impl
	rule__FollowingVehicle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowingVehicleAccess().getFrontKeyword_2()); }
	'front'
	{ after(grammarAccess.getFollowingVehicleAccess().getFrontKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowingVehicle__Group__3__Impl
	rule__FollowingVehicle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowingVehicleAccess().getRunnerKeyword_3()); }
	'runner'
	{ after(grammarAccess.getFollowingVehicleAccess().getRunnerKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FollowingVehicle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFollowingVehicleAccess().getFollowingAssignment_4()); }
	(rule__FollowingVehicle__FollowingAssignment_4)
	{ after(grammarAccess.getFollowingVehicleAccess().getFollowingAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Forward__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__0__Impl
	rule__Forward__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getForwardKeyword_0()); }
	'forward'
	{ after(grammarAccess.getForwardAccess().getForwardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__1__Impl
	rule__Forward__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForwardAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__2__Impl
	rule__Forward__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getDistanceAssignment_2()); }
	(rule__Forward__DistanceAssignment_2)
	{ after(grammarAccess.getForwardAccess().getDistanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forward__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForwardAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getForwardAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnLeft__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnLeft__Group__0__Impl
	rule__TurnLeft__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnLeftAccess().getTurnLeftAction_0()); }
	()
	{ after(grammarAccess.getTurnLeftAccess().getTurnLeftAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnLeft__Group__1__Impl
	rule__TurnLeft__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnLeftAccess().getTurnKeyword_1()); }
	'turn'
	{ after(grammarAccess.getTurnLeftAccess().getTurnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnLeft__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnLeft__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnLeftAccess().getLeftKeyword_2()); }
	'Left'
	{ after(grammarAccess.getTurnLeftAccess().getLeftKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurnRight__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnRight__Group__0__Impl
	rule__TurnRight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnRightAccess().getTurnRightAction_0()); }
	()
	{ after(grammarAccess.getTurnRightAccess().getTurnRightAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnRight__Group__1__Impl
	rule__TurnRight__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnRightAccess().getTurnKeyword_1()); }
	'turn'
	{ after(grammarAccess.getTurnRightAccess().getTurnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurnRight__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRight__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurnRightAccess().getRightKeyword_2()); }
	'Right'
	{ after(grammarAccess.getTurnRightAccess().getRightKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Root__PlatoonAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getPlatoonPlatoonParserRuleCall_0_0()); }
		rulePlatoon
		{ after(grammarAccess.getRootAccess().getPlatoonPlatoonParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__RouteAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getRouteRouteParserRuleCall_1_0()); }
		ruleRoute
		{ after(grammarAccess.getRootAccess().getRouteRouteParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Root__ConstraintsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootAccess().getConstraintsConstraintsParserRuleCall_2_0()); }
		ruleConstraints
		{ after(grammarAccess.getRootAccess().getConstraintsConstraintsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__LeaderVehicleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlatoonAccess().getLeaderVehicleLeaderVehicleParserRuleCall_1_0()); }
		ruleLeaderVehicle
		{ after(grammarAccess.getPlatoonAccess().getLeaderVehicleLeaderVehicleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__FollowingVehicleAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlatoonAccess().getFollowingVehicleFollowingVehicleParserRuleCall_2_0_0()); }
		ruleFollowingVehicle
		{ after(grammarAccess.getPlatoonAccess().getFollowingVehicleFollowingVehicleParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Platoon__FollowingVehicleAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlatoonAccess().getFollowingVehicleFollowingVehicleParserRuleCall_2_1_0()); }
		ruleFollowingVehicle
		{ after(grammarAccess.getPlatoonAccess().getFollowingVehicleFollowingVehicleParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRouteAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getRouteAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__RouteCommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRouteAccess().getRouteCommandsRouteCommandParserRuleCall_3_0()); }
		rulerouteCommand
		{ after(grammarAccess.getRouteAccess().getRouteCommandsRouteCommandParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Route__RouteCommandsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRouteAccess().getRouteCommandsRouteCommandParserRuleCall_4_0()); }
		rulerouteCommand
		{ after(grammarAccess.getRouteAccess().getRouteCommandsRouteCommandParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__LboundAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintsAccess().getLboundEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getConstraintsAccess().getLboundEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__UboundAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintsAccess().getUboundEIntParserRuleCall_5_0()); }
		ruleEInt
		{ after(grammarAccess.getConstraintsAccess().getUboundEIntParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeaderVehicleAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getLeaderVehicleAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeaderVehicle__RouteAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeaderVehicleAccess().getRouteRouteCrossReference_3_0()); }
		(
			{ before(grammarAccess.getLeaderVehicleAccess().getRouteRouteEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getLeaderVehicleAccess().getRouteRouteEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getLeaderVehicleAccess().getRouteRouteCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowingVehicleAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getFollowingVehicleAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FollowingVehicle__FollowingAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFollowingVehicleAccess().getFollowingVehicleCrossReference_4_0()); }
		(
			{ before(grammarAccess.getFollowingVehicleAccess().getFollowingVehicleEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getFollowingVehicleAccess().getFollowingVehicleEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getFollowingVehicleAccess().getFollowingVehicleCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forward__DistanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForwardAccess().getDistanceEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getForwardAccess().getDistanceEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
